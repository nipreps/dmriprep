# vim ft=yaml
dist: xenial
sudo: true
language: python

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.cache/data

python:
  - 3.6
  - 3.7


env:
  global:
    - CHECK_TYPE="install"
    - INSTALL_TYPE="pip"
    - INSTALL_DEPENDS="pip setuptools"
  matrix:
    - CHECK_TYPE="style"
    - CHECK_TYPE="test"
    - INSTALL_TYPE="install"
    - INSTALL_TYPE="develop"
    - INSTALL_TYPE="sdist"
    - INSTALL_TYPE="wheel"
    - INSTALL_DEPENDS="pip==18.1 setuptools==30.2.1"
    - INSTALL_DEPENDS="pip==10.0.1 setuptools==30.4.0"

matrix:
  exclude:
  - python: 3.7
    env: CHECK_TYPE="style"
  allow_failures:
  - python: 3.6
    env: INSTALL_DEPENDS="pip==10.0.1 setuptools==30.4.0"
  - python: 3.7
    env: INSTALL_DEPENDS="pip==10.0.1 setuptools==30.4.0"

before_install:
  - python -m pip install --upgrade pip virtualenv
  - virtualenv --python=python /tmp/venv
  - source /tmp/venv/bin/activate
  - python --version
  - python -m pip --version
  - python -m pip install --upgrade $INSTALL_DEPENDS
  - python -m pip --version
  - |
    if [ "$INSTALL_TYPE" == "pip" ]; then
        PACKAGE="."
    elif [ "$INSTALL_TYPE" == "sdist" ]; then
        python setup.py sdist
        PACKAGE="$( ls dist/*.tar.gz )"
    elif [ "$INSTALL_TYPE" == "wheel" ]; then
        python setup.py bdist_wheel
        PACKAGE="$( ls dist/*.whl )"
    fi
install:
  - |
    if [ "$INSTALL_TYPE" == "install" ]; then
        python setup.py install
    elif [ "$INSTALL_TYPE" == "develop" ]; then
        python setup.py develop
    else
        python -m pip install $PACKAGE
    fi
  - |
    INTENDED_VERSION="$(python -c 'import versioneer; print(versioneer.get_version())')"
    pushd /tmp
    INSTALLED_VERSION="$(python -c 'import dmriprep; print(dmriprep.__version__)')"
    python -c 'import dmriprep; print(dmriprep.__file__)'
    echo "Intended: $INTENDED_VERSION"
    echo "Installed: $INSTALLED_VERSION"
    test "$INTENDED_VERSION" == "$INSTALLED_VERSION"
    popd
  - if [ "$CHECK_TYPE" = "install" ]; then exit 0; fi

before_script:
  - travis_retry python -m pip install "dmriprep[$CHECK_TYPE]"
script:
  - |
    if [ "$CHECK_TYPE" == "style" ]; then
      travis_wait 60 flake8 dmriprep
    elif [ "$CHECK_TYPE" == "test" ]; then
      travis_wait 60 pytest -n 2 -vv --doctest-modules --cov dmriprep --cov-config .coveragerc --cov-report xml:cov.xml dmriprep
    else
      false
    fi
after_script:
  - python -m pip install codecov
  - codecov
